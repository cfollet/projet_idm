/* $Id:$ 
 * Creation : October 19, 2015
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            root
 */
@mainClass "JavaOperation::JavaOperation"


package JavaOperation;


require kermeta
require "platform:/resource/StateMachine/transfos/java/JavaBase.kmt"
using kermeta::standard
using JavaBase

class JavaOperation inherits JavaBase
{
	attribute header_comments : Bag<String>
	attribute return_type : String
	attribute parameters : Set<String>
	attribute exceptions : Set<String>
	attribute body : Bag<String>
	
	operation initialize(visibility : String, return_type : String, name : String) : JavaOperation is do
		self.visibility := visibility
		self.return_type := return_type
		self.name := name
		self.parameters := Set<String>.new
		self.exceptions := Set<String>.new
		self.body := Bag<String>.new
		self.header_comments := Bag<String>.new
		
		result := self
	end
	
	method equals(op : Object) : Boolean is do
		var castedOp : JavaOperation
    	castedOp ?= op
    	result := self.name.equals (castedOp.name)
	end
	
	method toString() : String is do
		var res : String init ""
		var indent : String init "    "
		
		self.header_comments.each{comment | res := res + "//" + comment + "\n"}
		res:= res + self.visibility+" "+self.return_type+" "+self.name
		res := res + "("
		if(self.parameters.size > 0) 
			then 	self.parameters.each{parameter | res := res + parameter + ", "}
					res := res.substring(0, res.size-2)
		end
		res:= res + ")"
		if(self.exceptions.size > 0) 
			then 	res := res + " throws "
					self.exceptions.each{exception | res := res + exception + ", "}
					res := res.substring(0, res.size-2)
		end
		
		res := res + "{\n"
		
		indent := indent + indent
		self.body.each{ line | 
			if(line != "")
				then res := res + indent + line + ";\n" 
				else res := res + " \n"
			end
			if(line.contains("//"))
				then res := res + indent + line + "\n" 
			end
		}
		indent := "    "
		res := res + indent + "}\n"
		
		result := res
	end 
}